#!/bin/bash

echo "Removing nova DB..."
rm /var/lib/nova/nova.sqlite

echo "Updating conf file..."
configparse.py

endpoint=`openstack --os-tenant-name admin --os-username admin --os-password ${ADMIN_PASS} --os-auth-url http://192.168.3.200:35357/v2.0 endpoint list -f csv -q |grep nova`

if [ -z "$endpoint" ]
then
    mysql -h${MYSQL_DB} -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e "CREATE DATABASE nova;"
    mysql -h${MYSQL_DB} -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
    IDENTIFIED BY '${NOVA_DBPASS}';"
    mysql -h${MYSQL_DB} -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
    IDENTIFIED BY '${NOVA_DBPASS}';"

    echo "Creating Nova user..."
    keystone user-create --name nova --pass ${NOVA_PASS} --email=nova@${EMAIL_ADDRESS}
    keystone user-role-add --user nova --tenant service --role admin

    echo "Registering Nova API and EndPoints..."
    keystone service-create --name nova --type compute --description "OpenStack Compute"
    keystone endpoint-create \
    --service-id $(keystone service-list | awk '/ compute / {print $2}') \
    --publicurl http://${HOST_IP}:8774/v2/%\(tenant_id\)s \
    --internalurl http://${HOST_IP}:8774/v2/%\(tenant_id\)s \
    --adminurl http://${HOST_IP}:8774/v2/%\(tenant_id\)s \
    --region regionOne
else
    echo "Endpoint already created"
fi




echo "Create database tables"
nova-manage db sync

echo "Starting nova using supervisord..."
exec /usr/bin/supervisord -n
